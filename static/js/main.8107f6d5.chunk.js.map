{"version":3,"sources":["assets/images/user-img-placeholder.jpeg","components/charts-theme.js","components/styled-components.js","components/config.js","components/format-number.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","FusionCharts","register","name","theme","base","chart","bgAlpha","canvasBgAlpha","baseFont","baseFontSize","baseFontBold","chartBottomMargin","chartTopMargin","chartLeftMargin","chartRightMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","tooltipPadding","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","bar2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","captionFontColor","paletteColors","valuePadding","yAxisName","yAxisNameAlpha","yAxisNameFontSize","yAxisNamePadding","valueFontBold","valueFontSize","plotToolText","captionAlignment","captionPadding","doughnut2d","showLabels","use3DLighting","showPlotBorder","defaultCenterLabel","pieRadius","doughnutRadius","showTooltip","enableRotation","enableSlicing","startingAngle","geo","legendScaleLineThickness","legendaxisborderalpha","legendShadow","plotFillAlpha","borderColor","borderThickness","nullEntityColor","nullEntityAlpha","entityFillHoverColor","entityToolText","Container","styled","div","_templateObject","Nav","nav","_templateObject2","config","formatNum","num","i","si","value","symbol","length","toFixed","replace","ReactFC","fcRoot","Charts","Maps","USARegion","url","concat","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDashboard","event","getData","setState","selectedValue","console","log","state","items","totalIncome","totalExpense","balance","totalBalance","transactions","arr","arrLen","parseInt","Amount","push","label","displayValue","_this2","fetch","then","response","json","data","batchRowValues","valueRanges","values","rows","rowObject","j","react_default","a","createElement","onload","className","src","UserImg","alt","style","minHeight","ReactFC_default","type","width","height","dataFormat","containerBackgroundOpacity","dataEmptyMessage","dataSource","caption","subCaption","colorrange","code","minvalue","gradient","color","minValue","maxvalue","Component","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8107f6d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-img-placeholder.be2ed151.jpeg\";","window.FusionCharts.register(\"theme\", {\n  name: \"ecommerce\",\n  theme: {\n    base: {\n      chart: {\n        bgAlpha: \"0\",\n        canvasBgAlpha: \"0\",\n        baseFont: \"basefont-regular\",\n        baseFontSize: \"14\",\n        baseFontBold: \"0\",\n        chartBottomMargin: \"0\",\n        chartTopMargin: \"0\",\n        chartLeftMargin: \"0\",\n        chartRightMargin: \"0\",\n        canvasBottomMargin: \"0\",\n        canvasTopMargin: \"0\",\n        canvasRightMargin: \"0\",\n        canvasLeftMargin: \"0\",\n        showBorder: \"0\",\n        showCanvasBorder: \"0\",\n        baseFontColor: \"#ffffff\",\n        captionFontBold: \"0\",\n        captionFontSize: \"14\",\n        subCaptionFontSize: \"14\",\n        tooltipColor: \"#ffffff\",\n        tooltipBgColor: \"#000000\",\n        tooltipBgAlpha: \"60\",\n        tooltipPadding: \"5\",\n        toolTipBorderAlpha: \"10\",\n        toolTipBorderRadius: \"3\",\n        showValues: \"0\",\n        legendBgAlpha: \"0\",\n        legendBorderAlpha: \"0\",\n        legendBorderThickness: \"0\"\n      }\n    },\n\n    bar2d: {\n      chart: {\n        placeValuesInside: \"0\",\n        usePlotGradientColor: \"0\",\n        showAlternateVGridColor: \"0\",\n        chartLeftMargin: \"5\",\n        canvasLeftMargin: \"5\",\n        divLineAlpha: \"10\",\n        divLineColor: \"#ffffff\",\n        captionFontColor: \"#8091ab\",\n        paletteColors: \"#1D91C0\",\n        valuePadding: \"5\",\n        yAxisName: \"Orders\",\n        yAxisNameAlpha: \"50\",\n        yAxisNameFontSize: \"12\",\n        yAxisNamePadding: \"20\",\n        valueFontBold: \"0\",\n        valueFontSize: \"12\",\n        plotToolText: \"<div>$label<br><b>$value orders</b>\",\n        captionAlignment: \"left\",\n        captionPadding: \"20\"\n      }\n    },\n\n    doughnut2d: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        showLabels: \"0\",\n        showValues: \"0\",\n        use3DLighting: \"0\",\n        showPlotBorder: \"0\",\n        defaultCenterLabel: \"75%\",\n        pieRadius: \"45\",\n        doughnutRadius: \"33\",\n        showTooltip: \"0\",\n        enableRotation: \"0\",\n        enableSlicing: \"0\",\n        startingAngle: \"90\"\n      }\n    },\n\n    geo: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        legendScaleLineThickness: \"0\",\n        legendaxisborderalpha: \"0\",\n        legendShadow: \"0\",\n        plotFillAlpha: \"85\",\n        showBorder: \"1\",\n        borderColor: \"#ffffff\",\n        borderThickness: \"0.3\",\n        nullEntityColor: \"#17202e\",\n        nullEntityAlpha: \"50\",\n        entityFillHoverColor: \"#17202e\",\n        captionAlignment: \"left\",\n        entityToolText: \"<div>$lname<br><b>$value orders</b>\",\n        chartLeftMargin: \"40\"\n      }\n    }\n  }\n});\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","\nexport default {\n    apiKey: 'AIzaSyDvE8FQNtXKBMjA5EV9TxnDLpJETPdyUMs',\n    spreadsheetId: '1o2D99TI_JquR2KinWJ7JrCT1OAvD5iqiA-hncc_mXk8'\n}","export default function formatNum(num) {\n  let si = [\n    { value: 1, symbol: \"\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"m\" },\n    { value: 1e9, symbol: \"g\" },\n    { value: 1e12, symbol: \"t\" },\n    { value: 1e15, symbol: \"p\" },\n    { value: 1e18, symbol: \"e\" }\n  ];\n  let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}\n","import React, { Component } from \"react\";\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport FusionCharts, { items } from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport ReactFC from \"react-fusioncharts\";\nimport \"./charts-theme\";\n\nimport config from \"./config\";\n//import Dropdown from \"react-dropdown\";\nimport formatNum from \"./format-number\";\n\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion);\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${ config.spreadsheetId }/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${ config.apiKey }`;\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      /*dropdownOptions: [],\n      selectedValue: null,*/\n      totalIncome: 0,\n      totalExpense: 0,\n      balance: 0,\n      totalBalance: 0,\n      transactions: []\n    };\n  }\n\n  getData() {\n    // google sheets data\n    const arr = this.state.items;\n    const arrLen = arr.length;\n\n    // kpi's\n    // All income\n    let totalIncome = 0;\n    // All expense\n    let totalExpense = 0;\n    // etsy revenue\n    let balance = 0;\n    // total balance\n    let totalBalance = 0;\n    let transactions = []\n    \n\n    for (let i = 0; i < arrLen; i++) {\n     /* if (arg === arr[i].ID) { */\n        if (arr[i][\"Type\"] === \"CR\") {\n          totalIncome+= parseInt(arr[i].Amount);\n          console.log(\"inside get\")\n          transactions.push({\n            label: \"Income\",\n            value: arr[i].Amount,\n            displayValue: `${arr[i].Amount} balance`\n          });\n        } else if (arr[i][\"Type\"] === \"DR\") {\n          totalExpense += parseInt(arr[i].Amount);\n          transactions.push({\n            label: \"Expense\",\n            value: arr[i].Amount,\n            displayValue: `${arr[i].Amount} balance`\n          });\n        /*} else if (arr[i][\"source\"] === \"ET\") {\n          balance += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Etsy\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders} orders`\n          });*/\n        \n      }\n    }\n\n    totalBalance = totalIncome - totalExpense ;\n    balance = parseInt(arr[arrLen-1].Amount)\n\n\n    // setting state\n    this.setState({\n      totalIncome: formatNum(totalIncome),\n      totalExpense: formatNum(totalExpense),\n      balance: formatNum(balance),\n      totalBalance: formatNum(totalBalance),\n      transactions: transactions\n    });\n  };\n\n updateDashboard = event => {\n    this.getData(event.value);\n    this.setState({ selectedValue: event.value });\n    console.log(event.value);\n  };\n\n  componentDidMount() {\n    fetch(url).then(response => response.json()).then(data => {\n      let batchRowValues = data.valueRanges[0].values;\n\n      const rows = [];\n      for (let i = 1; i < batchRowValues.length; i++) {\n        let rowObject = {};\n        for (let j = 0; j < batchRowValues[i].length; j++) {\n          rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n        }\n        rows.push(rowObject);\n      }\n\n        this.setState({ items: rows });\n        console.log(this.state.items);\n       this.getData();\n    });\n  }\n\n  render() {\n    return (\n      console.log(this.state),\n      <Container   onload={this.updateDashboard}>\n        {/* static navbar - top */}\n        <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\n          <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\n            MoneyU Payments\n          </Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Container className=\"user-detail-section\">\n              <span className=\"pr-2\">Hello, User</span>\n              <span className=\"img-container\">\n                <img src={UserImg} className=\"rounded-circle\" alt=\"user\" />\n              </span>\n            </Container>\n          </Container>\n        </Nav>\n\n        {/* static navbar - bottom */}\n        <Nav className=\"navbar fixed-top nav-secondary is-dark is-light-text\">\n          <Container className=\"text-medium\">Dashboard</Container>\n          <Container className=\"navbar-nav ml-auto\">\n            {/*<Dropdown\n              className=\"pr-2 custom-dropdown\"\n              options={this.state.dropdownOptions}\n              onChange={this.updateDashboard}\n              value={this.state.selectedValue}\n              placeholder=\"Select an option\"\n            />*/}\n          </Container>\n        </Nav>\n\n        {/* content area start */}\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 - revenue */}\n          <Container className=\"row\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Total Balance\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">₹</span>\n                  {this.state.totalBalance}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Last Transaction\n                  </Container>\n                 {/* <Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-amazon text-large\" />\n    </Container>*/}\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">₹</span>\n                  {this.state.balance}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Total Income\n                  </Container>\n                 {/*} <Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-ebay text-x-large logo-adjust\" />\n  </Container>*/}\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">₹</span>\n                  {this.state.totalIncome}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Total Expenditure\n                  </Container>\n                  {/*<Container className=\"card-heading-brand\">\n                    <i className=\"fab fa-etsy text-medium\" />\n</Container>*/}\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  <span className=\"text-large pr-1\">₹</span>\n                  {this.state.totalExpense}\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 2 - Income Vs Expense */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"column2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Income Trend\",\n                          subCaption: \"By Stores\"\n                        },\n                        data: this.state.transactions\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"column2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Income Trend\",\n                          subCaption: \"Per Week\"\n                        },\n                        colorrange: {\n                          code: \"#F64F4B\",\n                          minvalue: \"0\",\n                          gradient: \"1\",\n                          color: [\n                            {\n                              minValue: \"10\",\n                              maxvalue: \"25\",\n                              code: \"#EDF8B1\"\n                            },\n                            {\n                              minvalue: \"25\",\n                              maxvalue: \"50\",\n                              code: \"#18D380\"\n                            }\n                          ]\n                        },\n                        data: this.state.transactions\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        \n\n          {/* row 3 - orders trend */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"bar2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                     /* dataEmptyMessage: \"Loading Data...\",*/\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Expenditure Trend\",\n                          subCaption: \"By Week\"\n                        },\n                        data: this.state.transactions\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"line\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"Orders Trend\",\n                          subCaption: \"By Region\"\n                        },\n                        colorrange: {\n                          code: \"#F64F4B\",\n                          minvalue: \"0\",\n                          gradient: \"1\",\n                          color: [\n                            {\n                              minValue: \"10\",\n                              maxvalue: \"25\",\n                              code: \"#EDF8B1\"\n                            },\n                            {\n                              minvalue: \"25\",\n                              maxvalue: \"50\",\n                              code: \"#18D380\"\n                            }\n                          ]\n                        },\n                        data: this.state.transactions\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n        {/* content area end */}\n      </Container>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-dropdown/style.css';\nimport './style.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}